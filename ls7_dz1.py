# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.


class Matrix:
    def __init__(self, mx1):
        self.mx1 = mx1

    def __str__(self):
        s = ''
        for i in self.mx1:
            for el in i:
                s = s + str(el) + " "
        return f"\n{s[:8]}\n{s[9:17]}\n{s[18:26]}\n"

    def __add__(self, other):
        result = []
        buf = []
        for i in range(len(self.mx1)):
            buf.clear()
            for j in range(len(self.mx1[0])):
                r = int(self.mx1[i][j]) + int(other.mx1[i][j])
                buf.append(r)
            result.append(buf.copy())
        return result


print('Складываем матрицы: ')
matrix_1 = Matrix([[16, 22, 42], [32, 52, 36], [37, 44, 29]])
matrix_2 = Matrix([[19, 23, 23], [64, 16, 42], [31, 22, 14]])
print(matrix_1, matrix_2)
summ = matrix_1 + matrix_2
result = Matrix(summ)
print(f'Итоговая матрица: {result}')
